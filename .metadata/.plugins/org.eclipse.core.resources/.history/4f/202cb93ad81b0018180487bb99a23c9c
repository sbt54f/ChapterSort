import java.io.IOException;
import java.util.StringTokenizer;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Mapper.Context;

public class ChapterSort {

	public static class ChapterMapper extends Mapper<Object, Text, Text, IntWritable>
	{
		// init to "chapter 0"
		String currentChapter = null;
		Pattern p = Pattern.compile("chapter .+");
		
		@Override
		public void map(Object key, Text value, Context context
                    ) throws IOException, InterruptedException {
			Matcher m = p.matcher(value.toString());
			if(m.matches())
				currentChapter = m.group(1);
			StringTokenizer itr = new StringTokenizer(value.toString());
			while (itr.hasMoreTokens()) {
		//        word.set(itr.nextToken());
		//        context.write(word, one);
		  }
		}
	}
	
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
